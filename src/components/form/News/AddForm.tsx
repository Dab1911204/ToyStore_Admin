"use client";
import { useFormContext } from "@/context/FormContext";
import Form from "../Form";
import Button from "@/components/ui/button/Button";
import InputForm from "../form-elements/InputForm";
import TextAreaForm from "../form-elements/TextAreaForm";
import ImageInputForm from "../form-elements/ImageInputForm";
import { useNotification } from "@/context/NotificationContext";
import { FaRegSmileBeam } from "react-icons/fa";
import { NewsService } from "@/services/newsService";  // ‚úÖ import service
import { useRouter } from "next/navigation";     // ‚úÖ import router

export default function AddForm() {
  const { values, setErrors } = useFormContext();
  const { openNotification } = useNotification();
  const router = useRouter();

  const handleSubmit = async (data: Record<string, any> | FormData) => {
    const newErrors: { name: string; message: string }[] = [];

    // validate text fields
    if (!values.title) newErrors.push({ name: "title", message: "Ti√™u ƒë·ªÅ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" });
    if (!values.content) newErrors.push({ name: "content", message: "N·ªôi dung kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" });
    if (!values.image) newErrors.push({ name: "image", message: "Vui l√≤ng ch·ªçn ·∫£nh" });

    setErrors(newErrors);

    if (newErrors.length === 0) {
      try {
        console.log("üöÄ Submit data:", data);

        // ‚úÖ G·ªçi API th√™m tin t·ª©c
        await NewsService.createNews(data);

        // ‚úÖ Hi·ªÉn th·ªã th√¥ng b√°o
        openNotification({
          message: "Th√†nh c√¥ng",
          description: "Tin t·ª©c ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!",
          placement: "top",
          duration: 3,
          icon: <FaRegSmileBeam style={{ color: "green" }} />,
          style: { borderLeft: "5px solid green" },
        });

        // ‚úÖ Quay v·ªÅ trang danh s√°ch v√† refresh
        // router.push("/news");
        // router.refresh();
      } catch (error) {
        console.error("‚ùå L·ªói khi th√™m tin t·ª©c:", error);
        openNotification({
          message: "Th·∫•t b·∫°i",
          description: "Kh√¥ng th·ªÉ th√™m tin t·ª©c. Vui l√≤ng th·ª≠ l·∫°i!",
          placement: "top",
          duration: 3,
          style: { borderLeft: "5px solid red" },
        });
      }
    } else {
      console.log("‚ùå Errors:", newErrors);
    }
  };

  return (
    <Form onSubmit={handleSubmit} mode="multipart" method="POST">
      <InputForm label="Ti√™u ƒë·ªÅ" name="title" placeholder="Nh·∫≠p ti√™u ƒë·ªÅ" />
      <ImageInputForm label="H√¨nh ·∫£nh" name="image" />
      <TextAreaForm label="N·ªôi dung" name="content" placeholder="Nh·∫≠p n·ªôi dung" />
      <div className="flex justify-center">
        <Button type="submit" variant="primary" className="mt-4" size="md">
          Th√™m Tin T·ª©c
        </Button>
      </div>
    </Form>
  );
}
